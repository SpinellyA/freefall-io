import pygame
import sys

pygame.init()
screen = pygame.display.set_mode((800, 600))
clock = pygame.time.Clock()
font = pygame.font.Font(None, 36)

# Settings state
settings = {
    "difficulty": "normal",  # options: easy, normal, hard
    "volume": "normal"        # options: mute, low, normal, high
}

def draw_text(text, x, y, color):
    surface = font.render(text, True, color)
    screen.blit(surface, (x, y))

def draw_settings_menu(selected_option):
    screen.fill((0, 0, 0))
    draw_text("Settings", 350, 50, (255, 255, 255))

    difficulty_options = ["easy", "normal", "hard"]
    volume_options = ["mute", "low", "normal", "high"]

    draw_text("Difficulty:", 100, 150, (255, 255, 255))
    for i, option in enumerate(difficulty_options):
        color = (255, 0, 0) if settings["difficulty"] == option else (255, 255, 255)
        draw_text(option.capitalize(), 150, 190 + i * 40, color)

    draw_text("Volume:", 500, 150, (255, 255, 255))
    for i, option in enumerate(volume_options):
        color = (255, 0, 0) if settings["volume"] == option else (255, 255, 255)
        draw_text(option.capitalize(), 550, 190 + i * 40, color)

    pygame.display.flip()

def settings_menu():
    selected = "difficulty"
    difficulty_index = ["easy", "normal", "hard"].index(settings["difficulty"])
    volume_index = ["mute", "low", "normal", "high"].index(settings["volume"])

    while True:
        draw_settings_menu(selected)
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()
            elif event.type == pygame.KEYDOWN:
                if selected == "difficulty":
                    if event.key == pygame.K_DOWN:
                        difficulty_index = (difficulty_index + 1) % 3
                        settings["difficulty"] = ["easy", "normal", "hard"][difficulty_index]
                    elif event.key == pygame.K_UP:
                        difficulty_index = (difficulty_index - 1) % 3
                        settings["difficulty"] = ["easy", "normal", "hard"][difficulty_index]
                elif selected == "volume":
                    if event.key == pygame.K_DOWN:
                        volume_index = (volume_index + 1) % 4
                        settings["volume"] = ["mute", "low", "normal", "high"][volume_index]
                    elif event.key == pygame.K_UP:
                        volume_index = (volume_index - 1) % 4
                        settings["volume"] = ["mute", "low", "normal", "high"][volume_index]

                if event.key == pygame.K_LEFT or event.key == pygame.K_RIGHT:
                    selected = "volume" if selected == "difficulty" else "difficulty"

                elif event.key == pygame.K_ESCAPE:
                    return

def get_time_scale():
    return {"easy": 0.5, "normal": 1, "hard": 4}[settings["difficulty"]]

# Example use
if __name__ == "__main__":
    settings_menu()
    print("Selected difficulty:", settings["difficulty"])
    print("Selected volume:", settings["volume"])
    print("Time scale multiplier:", get_time_scale())
